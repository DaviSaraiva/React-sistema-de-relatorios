[{"C:\\Users\\extra\\dest\\src\\App.js":"1","C:\\Users\\extra\\dest\\src\\index.js":"2","C:\\Users\\extra\\dest\\src\\components\\Navbar.js":"3","C:\\Users\\extra\\dest\\src\\components\\SidebarData.js":"4","C:\\Users\\extra\\dest\\src\\pages\\Home.js":"5","C:\\Users\\extra\\dest\\src\\pages\\Reports.js":"6","C:\\Users\\extra\\dest\\src\\pages\\Relatorio.js":"7","C:\\Users\\extra\\dest\\src\\pages\\Tbl2.js":"8","C:\\Users\\extra\\dest\\src\\pages\\Recargas.js":"9","C:\\Users\\extra\\dest\\src\\pages\\PedidosFeitos.js":"10","C:\\Users\\extra\\dest\\src\\pages\\BoletosNaoPagos.js":"11","C:\\Users\\extra\\dest\\src\\pages\\BoletosPagos.js":"12","C:\\Users\\extra\\dest\\src\\pages\\VendasCartao.js":"13","C:\\Users\\extra\\dest\\src\\pages\\PagamentoCartao.js":"14","C:\\Users\\extra\\dest\\src\\pages\\CreditosLiberados.js":"15","C:\\Users\\extra\\dest\\src\\pages\\FinanceiroRecargas.js":"16","C:\\Users\\extra\\dest\\src\\pages\\FinaceiroCartao.js":"17"},{"size":1557,"mtime":1607564988830,"results":"18","hashOfConfig":"19"},{"size":198,"mtime":1606852144774,"results":"20","hashOfConfig":"19"},{"size":1658,"mtime":1607306222211,"results":"21","hashOfConfig":"19"},{"size":1920,"mtime":1607374826871,"results":"22","hashOfConfig":"19"},{"size":182,"mtime":1606837151094,"results":"23","hashOfConfig":"19"},{"size":4537,"mtime":1606848555773,"results":"24","hashOfConfig":"19"},{"size":219,"mtime":1606822189378,"results":"25","hashOfConfig":"19"},{"size":12025,"mtime":1606877511290,"results":"26","hashOfConfig":"19"},{"size":3229,"mtime":1607293076694,"results":"27","hashOfConfig":"19"},{"size":3086,"mtime":1607341918893,"results":"28","hashOfConfig":"19"},{"size":2819,"mtime":1607293146241,"results":"29","hashOfConfig":"19"},{"size":3307,"mtime":1607293125231,"results":"30","hashOfConfig":"19"},{"size":3042,"mtime":1607293256412,"results":"31","hashOfConfig":"19"},{"size":3009,"mtime":1607306378663,"results":"32","hashOfConfig":"19"},{"size":3144,"mtime":1607568928535,"results":"33","hashOfConfig":"19"},{"size":2161,"mtime":1607571507399,"results":"34","hashOfConfig":"19"},{"size":2163,"mtime":1607571040130,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nv2ggn",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\extra\\dest\\src\\App.js",[],"C:\\Users\\extra\\dest\\src\\index.js",[],["82","83"],"C:\\Users\\extra\\dest\\src\\components\\Navbar.js",[],["84","85"],"C:\\Users\\extra\\dest\\src\\components\\SidebarData.js",[],"C:\\Users\\extra\\dest\\src\\pages\\Home.js",[],["86","87"],"C:\\Users\\extra\\dest\\src\\pages\\Reports.js",[],["88","89"],"C:\\Users\\extra\\dest\\src\\pages\\Relatorio.js",[],["90","91"],"C:\\Users\\extra\\dest\\src\\pages\\Tbl2.js",[],"C:\\Users\\extra\\dest\\src\\pages\\Recargas.js",["92"],"import React, { useEffect, useState} from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { format } from 'date-fns';\r\nimport * as GoIcons from \"react-icons/go\";\r\n\r\nimport axios from 'axios';\r\n\r\nconst DatatablePage = () => {\r\n  const [informacoes, setInformacoes] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8081/recarga').then(response => {\r\n      console.log(response)\r\n        setInformacoes(response.data)\r\n    })\r\n}, []);\r\n  \r\n  let data = {\r\n    columns: [\r\n      {label: 'Id',field: 'id',sort: 'asc',width: 30},\r\n      {label: 'Nome',field: 'name',sort: 'asc',width: 150},\r\n      {label: 'CPF',field: 'cpf',sort: 'asc',width: 50},\r\n      {label: 'Tipo do Pedido',field: 'TipPed',sort: 'asc',width: 50},\r\n      {label: 'Tipo do Pagamento',field: 'TipPag',sort: 'asc',width: 50},\r\n      {label: 'Celular',field: 'cel',sort: 'asc',width: 200},\r\n      {label: 'Data do Pedido ',field: 'datPed',sort: 'asc',width: 150},\r\n      {label: 'Data do pagamento',field: 'datPag',sort: 'asc',width: 100},\r\n      {label: 'Mensagem de Pagamento',field: 'mens',sort: 'asc',width: 80},\r\n      {label: 'Status do pagamento',field: 'status',sort: 'asc',width: 80},\r\n      {label: 'Comprovante IUGU',field: 'url',sort: 'asc',width: 80}\r\n\r\n    ],\r\n    \r\n    rows: []\r\n  };\r\n       \r\n  informacoes.forEach((pedido,indice) => {\r\n    const tradutor =  pedido.TIPO_PEDIDO===0 ? 'Recarga' : 'Cartão'  ;\r\n    const tradutorStatus=  pedido.STATUS_PAGAMENTO;\r\n    let status=\"\";\r\n    if (tradutorStatus===0) {\r\n      status='Aguardando aprovação';\r\n    } \r\n    else if (tradutorStatus===1)  {\r\n      status='Aprovado';\r\n    }\r\n     else if (tradutorStatus===8)  {\r\n      status='Rejeitado';\r\n    } \r\n    else if(tradutorStatus===9)  {\r\n      status='Cancelado';\r\n    }\r\n\r\n    const linkConf = pedido.URL_PAGAMENTO;\r\n  let link= <a href={linkConf} target={\"_blank\"}><GoIcons.GoLinkExternal />Comprovante</a>\r\n    \r\n    const tradutorPagemento=  pedido.TIPO_PAGAMENTO;\r\n    let tipoP=\"\";\r\n    if (tradutorPagemento===1) {\r\n      tipoP='Cartão de crédito';\r\n    } \r\n    if (tradutorPagemento===2) {\r\n      tipoP='Boleto';\r\n    } \r\n    if (tradutorPagemento===3) {\r\n      tipoP='Cartão de débito';\r\n    } \r\n\r\n    data[\"rows\"].push(\r\n      {\r\n        id: ++indice,\r\n        name: pedido.pessoas[0]['NOME'],\r\n        cpf: pedido.pessoas[0]['CPF'],\r\n        TipPed:tradutor,\r\n        TipPag:tipoP,\r\n        cel:pedido.pessoas[0]['CELULAR'],\r\n        datPed:format(new Date(pedido.DATA_PEDIDO), 'dd/MM/yyyy'),\r\n        datPag:format(new Date(pedido.DATA_PAGAMENTO), 'dd/MM/yyyy'),\r\n        mens:pedido.MENSAGEM_PAGAMENTO,\r\n        status:status,\r\n        url:link\r\n\r\n      }\r\n    )\r\n  });\r\n  console.log(data)\r\n\r\n  return (\r\n    <div>\r\n    <h1><br/><center>Relatório de Créditos Vendidos</center></h1>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      hover\r\n      responsive true\r\n      data={data}\r\n    />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default DatatablePage;\r\n\r\n// const linkConf = pedido.URL_PAGAMENTO;\r\n    // let link= \"\";\r\n    // if(link==='localhost:3000') {\r\n    //   link=\"Não ha link\";\r\n    // } else {\r\n    //   link=<a href={linkConf} target={\"_blank\"}>Link de pagamento</a>;\r\n\r\n    // }","C:\\Users\\extra\\dest\\src\\pages\\PedidosFeitos.js",["93"],"import React, { useEffect, useState} from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { format } from 'date-fns';\r\nimport * as GoIcons from \"react-icons/go\";\r\n\r\nimport axios from 'axios';\r\n\r\nconst DatatablePage = () => {\r\n  const [informacoes, setInformacoes] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8081/pedidosfeitos').then(response => {\r\n      console.log(response)\r\n        setInformacoes(response.data)\r\n    })\r\n}, []);\r\n  \r\n\r\n  let data = {\r\n    columns: [\r\n      {label: 'Id',field: 'id',sort: 'asc',width: 30},\r\n      {label: 'Nome',field: 'name',sort: 'asc',width: 150},\r\n      {label: 'CPF',field: 'cpf',sort: 'asc',width: 50},\r\n      {label: 'Email',field: 'email', sort: 'asc',width: 100},\r\n      {label: 'Tipo do Pedido',field: 'TipPed',sort: 'asc',width: 50},\r\n      {label: 'Celular',field: 'cel',sort: 'asc',width: 200},\r\n      {label: 'Data do Pedido ',field: 'datPed',sort: 'asc',width: 150},\r\n      {label: 'Data do pagamento',field: 'datPag',sort: 'asc',width: 100},\r\n      {label: 'Mensagem de Pagamento',field: 'mens',sort: 'asc',width: 80},\r\n      {label: 'Status do pagamento',field: 'status',sort: 'asc',width: 80},\r\n      {label: 'Tipo de Pagamento',field: 'Tip',sort: 'asc',width: 50},\r\n      {label: 'URL de pagamento',field: 'url',sort: 'asc',width: 80}\r\n\r\n    ],\r\n    \r\n    rows: []\r\n  };\r\n         \r\n  informacoes.forEach((pedido,indice) => {\r\n    const tradutor =  pedido.TIPO_PEDIDO===0 ? 'Recarga' : 'Cartão'  ;\r\n    const tradutorStatus=  pedido.STATUS_PAGAMENTO;\r\n    let status=\"\";\r\n    if (tradutorStatus===0) {\r\n      status='Aguardando aprovação';\r\n    } \r\n    else if (tradutorStatus===1)  {\r\n      status='Aprovado';\r\n    }\r\n     else if (tradutorStatus===8)  {\r\n      status='Rejeitado';\r\n    } \r\n    else if(tradutorStatus===9)  {\r\n      status='Cancelado';\r\n    }\r\n\r\n    const tradutorPagemento=  pedido.TIPO_PAGAMENTO;\r\n    let tipoP=\"\";\r\n    if (tradutorPagemento===1) {\r\n      tipoP='Cartão de crédito';\r\n    } \r\n    if (tradutorPagemento===2) {\r\n      tipoP='Boleto';\r\n    } \r\n    if (tradutorPagemento===3) {\r\n      tipoP='Cartão de débito';\r\n    } \r\n\r\n    const linkConf = pedido.URL_PAGAMENTO;\r\n  let link= <a href={linkConf} target={\"_blank\"}><GoIcons.GoLinkExternal />Comprovante</a>\r\n    \r\n    data[\"rows\"].push(\r\n      {\r\n        id: ++indice,\r\n        name: pedido.pessoas[0]['NOME'],\r\n        cpf: pedido.pessoas[0]['CPF'],\r\n        email:pedido.pessoas[0]['EMAIL'],\r\n        cel:pedido.pessoas[0]['CELULAR'],\r\n        TipPed:tradutor,\r\n        datPed:format(new Date(pedido.DATA_PEDIDO), 'dd/MM/yyyy'),\r\n        datPag:format(new Date(pedido.DATA_PAGAMENTO), 'dd/MM/yyyy'),\r\n        mens:pedido.MENSAGEM_PAGAMENTO,\r\n        status:status,\r\n        Tip:tipoP,\r\n        url:link\r\n      }\r\n    )\r\n  });\r\n  console.log(data)\r\n\r\n  return (\r\n    <div> \r\n      <h1><br/><center>Pedidos Feitos</center></h1>\r\n    \r\n    <MDBDataTable \r\n    striped\r\n    bordered\r\n    responsive true\r\n    hover\r\n    \r\n    data={data}\r\n  />\r\n  </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default DatatablePage;\r\n\r\n",["94","95"],"C:\\Users\\extra\\dest\\src\\pages\\BoletosNaoPagos.js",[],"C:\\Users\\extra\\dest\\src\\pages\\BoletosPagos.js",["96","97"],"import React, { useEffect, useState} from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { format } from 'date-fns';\r\nimport axios from 'axios';\r\nimport * as GoIcons from \"react-icons/go\";\r\nimport ReactHTMLTabletoExcel from 'react-html-table-to-excel'\r\n\r\nconst DatatablePage = () => {\r\n  const [informacoes, setInformacoes] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8081/boletospagos').then(response => {\r\n      console.log(response)\r\n        setInformacoes(response.data)\r\n    })\r\n}, []);\r\n  \r\n  let data = {\r\n    columns: [\r\n      {label: 'Id',field: 'id',sort: 'asc',width: 30},\r\n      {label: 'Nome',field: 'name',sort: 'asc',width: 150},\r\n      {label: 'CPF',field: 'cpf',sort: 'asc',width: 50},\r\n      {label: 'Tipo do Pedido',field: 'TipPed',sort: 'asc',width: 50},\r\n      {label: 'Tipo do Pagamento',field: 'TipPag',sort: 'asc',width: 50},\r\n      {label: 'Celular',field: 'cel',sort: 'asc',width: 200},\r\n      {label: 'Data do Pedido ',field: 'datPed',sort: 'asc',width: 150},\r\n      {label: 'Data do pagamento',field: 'datPag',sort: 'asc',width: 100},\r\n      {label: 'Mensagem de Pagamento',field: 'mens',sort: 'asc',width: 80},\r\n      {label: 'Status do pagamento',field: 'status',sort: 'asc',width: 80},\r\n      {label: 'Comprovante IUGU',field: 'url',sort: 'asc',width: 80}\r\n\r\n    ],\r\n    \r\n    rows: []\r\n  };\r\n       \r\n  informacoes.forEach((pedido,indice) => {\r\n    const tradutor =  pedido.TIPO_PEDIDO===0 ? 'Recarga' : 'Cartão'  ;\r\n    const tradutorStatus=  pedido.STATUS_PAGAMENTO;\r\n    let status=\"\";\r\n    if (tradutorStatus===0) {\r\n      status='Aguardando aprovação';\r\n    } \r\n    else if (tradutorStatus===1)  {\r\n      status='Aprovado';\r\n    }\r\n     else if (tradutorStatus===8)  {\r\n      status='Rejeitado';\r\n    } \r\n    else if(tradutorStatus===9)  {\r\n      status='Cancelado';\r\n    }\r\n    const linkConf = pedido.URL_PAGAMENTO;\r\n    let link= <a href={linkConf} target={\"_blank\"}><GoIcons.GoLinkExternal />Comprovante</a>\r\n      \r\n    \r\n    const tradutorPagemento=  pedido.TIPO_PAGAMENTO;\r\n    let tipoP=\"\";\r\n    if (tradutorPagemento===1) {\r\n      tipoP='Cartão de crédito';\r\n    } \r\n    if (tradutorPagemento===2) {\r\n      tipoP='Boleto';\r\n    } \r\n    if (tradutorPagemento===3) {\r\n      tipoP='Cartão de débito';\r\n    } \r\n\r\n    data[\"rows\"].push(\r\n      {\r\n        id: ++indice,\r\n        name: pedido.pessoas[0]['NOME'],\r\n        cpf: pedido.pessoas[0]['CPF'],\r\n        TipPed:tradutor,\r\n        TipPag:tipoP,\r\n        cel:pedido.pessoas[0]['CELULAR'],\r\n        datPed:format(new Date(pedido.DATA_PEDIDO), 'dd/MM/yyyy'),\r\n        datPag:format(new Date(pedido.DATA_PAGAMENTO), 'dd/MM/yyyy'),\r\n        mens:pedido.MENSAGEM_PAGAMENTO,\r\n        status:status,\r\n        url:link\r\n      }\r\n    )\r\n  \r\n  });\r\n  console.log(data)\r\n\r\n  return (\r\n    <div>\r\n    <h1><br/><center>Relatório de Boletos Pagos</center></h1>\r\n    < MDBDataTable  \r\n      striped\r\n      bordered\r\n      hover\r\n      responsive true\r\n      data={data}\r\n    />\r\n    \r\n   \r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default DatatablePage;\r\n \r\n// <ReactHTMLTabletoExcel \r\n//         id botaoexportaExcel\r\n//         className btn btn-primary\r\n//         table={data}\r\n//         filename pedidosexecel\r\n//         sheetpagina \r\n//         buttonTextExecel\r\n//     />\r\n\r\n",["98","99"],"C:\\Users\\extra\\dest\\src\\pages\\VendasCartao.js",["100"],"import React, { useEffect, useState} from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { format } from 'date-fns';\r\nimport * as GoIcons from \"react-icons/go\";\r\nimport axios from 'axios';\r\n\r\nconst DatatablePage = () => {\r\n  const [informacoes, setInformacoes] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8081/cartao').then(response => {\r\n      console.log(response)\r\n        setInformacoes(response.data)\r\n    })\r\n}, []);\r\n  \r\n\r\n  let data = {\r\n    columns: [\r\n      {label: 'Id',field: 'id',sort: 'asc',width: 30},\r\n      {label: 'Nome',field: 'name',sort: 'asc',width: 150},\r\n      {label: 'CPF',field: 'cpf',sort: 'asc',width: 50},\r\n      {label: 'Tipo do Pedido',field: 'TipPed',sort: 'asc',width: 50},\r\n      {label: 'Tipo do Pagamento',field: 'TipPag',sort: 'asc',width: 50},\r\n      {label: 'Celular',field: 'cel',sort: 'asc',width: 200},\r\n      {label: 'Data do Pedido ',field: 'datPed',sort: 'asc',width: 150},\r\n      {label: 'Data do pagamento',field: 'datPag',sort: 'asc',width: 100},\r\n      {label: 'Mensagem de Pagamento',field: 'mens',sort: 'asc',width: 80},\r\n      {label: 'Status do pagamento',field: 'status',sort: 'asc',width: 80},\r\n      {label: 'Comprovante IUGU',field: 'url',sort: 'asc',width: 80}\r\n      \r\n    ],\r\n    \r\n    rows: []\r\n  };\r\n       \r\n  informacoes.forEach((pedido,indice) => {\r\n    const tradutor =  pedido.TIPO_PEDIDO===0 ? 'Recarga' : 'Cartão'  ;\r\n        \r\n    const tradutorStatus=  pedido.STATUS_PAGAMENTO;\r\n    let status=\"\";\r\n    if (tradutorStatus===0) {\r\n      status='Aguardando aprovação';\r\n    } \r\n    else if (tradutorStatus===1)  {\r\n      status='Aprovado';\r\n    }\r\n     else if (tradutorStatus===8)  {\r\n      status='Rejeitado';\r\n    } \r\n    else if(tradutorStatus===9)  {\r\n      status='Cancelado';\r\n    }\r\n\r\n    const linkConf = pedido.URL_PAGAMENTO;\r\n  let link= <a href={linkConf} target={\"_blank\"}><GoIcons.GoLinkExternal />Comprovante</a>\r\n    \r\n    const tradutorPagemento=  pedido.TIPO_PAGAMENTO;\r\n    let tipoP=\"\";\r\n    if (tradutorPagemento===1) {\r\n      tipoP='Cartão de crédito';\r\n    } \r\n    if (tradutorPagemento===2) {\r\n      tipoP='Boleto';\r\n    } \r\n    if (tradutorPagemento===3) {\r\n      tipoP='Cartão de débito';\r\n    } \r\n    data[\"rows\"].push(\r\n      {\r\n        id: ++indice,\r\n        name: pedido.pessoas[0]['NOME'],\r\n        cpf: pedido.pessoas[0]['CPF'],\r\n        TipPed:tradutor,\r\n        TipPag:tipoP,\r\n        cel:pedido.pessoas[0]['CELULAR'],\r\n        datPed:format(new Date(pedido.DATA_PEDIDO), 'dd/MM/yyyy'),\r\n        datPag:format(new Date(pedido.DATA_PAGAMENTO), 'dd/MM/yyyy'),\r\n        mens:pedido.MENSAGEM_PAGAMENTO,\r\n        status:status,\r\n        url:link\r\n      }\r\n    )\r\n  });\r\n  console.log(data)\r\n\r\n  return (\r\n    <div>\r\n    <h1><br/><center><strong>Relatório Venda de Cartões</strong></center></h1>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      hover\r\n      maxHeight='600px'\r\n      responsive true\r\n      data={data}\r\n    />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default DatatablePage;\r\n\r\n","C:\\Users\\extra\\dest\\src\\pages\\PagamentoCartao.js",["101"],"import React, { useEffect, useState} from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { format } from 'date-fns';\r\nimport axios from 'axios';\r\nimport * as GoIcons from \"react-icons/go\";\r\n\r\n\r\nconst DatatablePage = () => {\r\n  const [informacoes, setInformacoes] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8081/pagamentoscartao').then(response => {\r\n      // console.log(response)\r\n        setInformacoes(response.data)\r\n    })\r\n}, []);\r\n  \r\n  let data = {\r\n    columns: [\r\n      {label: 'ID',field: 'id',sort: 'asc',width: 30},\r\n      {label: 'NOME',field: 'name',sort: 'asc',width: 150},\r\n      {label: 'CPF',field: 'cpf',sort: 'asc',width: 50},\r\n      {label: 'TIPO DO PEDIDO',field: 'TipPed',sort: 'asc',width: 50},\r\n      {label: 'TIPO DO PAGAMENTO',field: 'TipPag',sort: 'asc',width: 50},\r\n      {label: 'CELULAR',field: 'cel',sort: 'asc',width: 200},\r\n      {label: 'DATA DO PEDIDO ',field: 'datPed',sort: 'asc',width: 150},\r\n      {label: 'DATA DO PAGAMENTO',field: 'datPag',sort: 'asc',width: 100},\r\n      {label: 'MENSAGEM DE PAGAMENTO',field: 'mens',sort: 'asc',width: 80},\r\n      {label: 'STATUS DO PAGAMENTO',field: 'status',sort: 'asc',width: 80},\r\n      {label: 'COMPROVANTE DO IUGU',field: 'url',sort: 'asc',width: 80}\r\n\r\n    ],\r\n    \r\n    rows: []\r\n  };\r\n       \r\n  informacoes.forEach((pedido,indice) => {\r\n    const tradutor =  pedido.TIPO_PEDIDO===0 ? 'RECARGA' : 'CARTÃO'  ;\r\n    const tradutorStatus=  pedido.STATUS_PAGAMENTO;\r\n    let status=\"\";\r\n    if (tradutorStatus===0) {\r\n      status='AGUARDANDO APROVAÇÃO';\r\n    } \r\n    else if (tradutorStatus===1)  {\r\n      status='APROVADO';\r\n    }\r\n     else if (tradutorStatus===8)  {\r\n      status='REJEITADO';\r\n    } \r\n    else if(tradutorStatus===9)  {\r\n      status='CANCELADO';\r\n    }\r\n    const linkConf = pedido.URL_PAGAMENTO;\r\n    let link= <a href={linkConf} target={\"_blank\"}><GoIcons.GoLinkExternal />COMPROVANTE</a>\r\n      \r\n    \r\n    const tradutorPagemento=  pedido.TIPO_PAGAMENTO;\r\n    let tipoP=\"\";\r\n    if (tradutorPagemento===1) {\r\n      tipoP='CARTÃO DE CRÉDITO';\r\n    } \r\n    if (tradutorPagemento===2) {\r\n      tipoP='BOLETO';\r\n    } \r\n    if (tradutorPagemento===3) {\r\n      tipoP='CARTÃO DE DÉBITO';\r\n    } \r\n\r\n    data[\"rows\"].push(\r\n      {\r\n        id: ++indice,\r\n        name: pedido.pessoas[0]['NOME'],\r\n        cpf: pedido.pessoas[0]['CPF'],\r\n        TipPed:tradutor,\r\n        TipPag:tipoP,\r\n        cel:pedido.pessoas[0]['CELULAR'],\r\n        datPed:format(new Date(pedido.DATA_PEDIDO), 'dd/MM/yyyy'),\r\n        datPag:format(new Date(pedido.DATA_PAGAMENTO), 'dd/MM/yyyy'),\r\n        mens:pedido.MENSAGEM_PAGAMENTO,\r\n        status:status,\r\n        url:link\r\n      }\r\n    )\r\n  });\r\n\r\n  \r\n  return (\r\n    <div>\r\n    <h1><br/><center>Relatório de Pagamentos com Cartão</center></h1>\r\n    <MDBDataTable\r\n      striped\r\n      bordered\r\n      hover\r\n      responsive true\r\n      data={data}\r\n      \r\n    />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default DatatablePage;\r\n\r\n","C:\\Users\\extra\\dest\\src\\pages\\CreditosLiberados.js",["102"],"C:\\Users\\extra\\dest\\src\\pages\\FinanceiroRecargas.js",[],"C:\\Users\\extra\\dest\\src\\pages\\FinaceiroCartao.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"103","replacedBy":"109"},{"ruleId":"105","replacedBy":"110"},{"ruleId":"103","replacedBy":"111"},{"ruleId":"105","replacedBy":"112"},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":54,"column":32,"nodeType":"117","endLine":54,"endColumn":49},{"ruleId":"115","severity":1,"message":"116","line":68,"column":32,"nodeType":"117","endLine":68,"endColumn":49},{"ruleId":"103","replacedBy":"118"},{"ruleId":"105","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":53,"column":34,"nodeType":"117","endLine":53,"endColumn":51},{"ruleId":"103","replacedBy":"124"},{"ruleId":"105","replacedBy":"125"},{"ruleId":"115","severity":1,"message":"116","line":55,"column":32,"nodeType":"117","endLine":55,"endColumn":49},{"ruleId":"115","severity":1,"message":"116","line":53,"column":34,"nodeType":"117","endLine":53,"endColumn":51},{"ruleId":"115","severity":1,"message":"116","line":52,"column":34,"nodeType":"117","endLine":52,"endColumn":51},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],["126"],["127"],["126"],["127"],["126"],["127"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["126"],["127"],"no-unused-vars","'ReactHTMLTabletoExcel' is defined but never used.","Identifier","unusedVar",["126"],["127"],"no-global-assign","no-unsafe-negation"]